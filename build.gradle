plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.coming'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-json'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	// providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	// MySQL 의존성 추가
	implementation 'mysql:mysql-connector-java:8.0.33'
	
	// MyBatis 의존성 추가
	implementation 'org.mybatis:mybatis:3.5.16'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'

	// Spring Boot Security 의존성 추가
	implementation "org.springframework.boot:spring-boot-starter-security"
	testImplementation 'org.springframework.security:spring-security-test'

	// Spring Boot JWT 의존성 추가
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5' // 이 라이브러리가 있어야 Jackson을 사용해 JWT payload를 처리합니다.

	// Radis 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// AWS SDK 라이브러리 추가
	implementation 'software.amazon.awssdk:s3:2.20.49' // AWS SDK S3 최신 버전
	implementation 'software.amazon.awssdk:auth:2.20.49' // AWS SDK auth 최신 버전
}

tasks.named('test') {
	useJUnitPlatform()
}